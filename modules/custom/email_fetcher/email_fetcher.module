<?php
/**
 * @file tracking.module
 * TODO: CLOSE transaction if there is a POD already
 * TODO: REPLY to sender of POD about status
 */
function email_fetcher_menu(){
  $items = array();
  //the url that gets called when running cron 
  $items['email/fetch'] = array(
    'title' => t("Fetch email"),        
    'page callback'   => 'fetch_email',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
                                                                                                                                                                                    
  return $items;                                                                                                                                                                    
}  

/**
  This is the program that will fetch emails from bluehost mail servers.
  It should run every 30 seconds in order to check incoming mail. (cron)
  
  Loop through each new image and detect the following
    Sender (if valid or not, mobile phone number should be registered on the site to avoid spam mail)
    Body attached image
    Subject <Waybill number>  - <receipient name>
    Date ??
  Flag the email as read
  Where to store received POD image?
  Naming convention  


*/

function fetch_email(){
  include_once 'imap/Imap.class.php';  
  $hostname = 'box558.bluehost.com';
  $username = 'tracking@myspeedex.net';
  
  $hostname = 'imap.gmail.com';
  $username = 'tracking.speedex@gmail.com';
  
  $password = 'connect123';
  $pod_path = $_SERVER['DOCUMENT_ROOT']."/sites/default/files/pod/";
 
  $imap = new Imap($hostname,$username,$password,"INBOX",993,"imap/ssl");
  if($imap->get_is_connected()){
    
    //determine if there are new messages
    $unseen = imap_search($imap->get_stream(),"UNSEEN");
    
    if($unseen && is_array($unseen)){
      foreach($unseen as $k=>$message_id){
        
        
        
        $f = fopen($pod_path."test.jpg",'w+');
        fwrite($f,base64_decode(imap_fetchbody($imap->get_stream(),$message_id,2)));
        fclose($f);
        
        
        $email = $imap->returnEmailMessageArr($message_id);
        $e = email_fetcher_validate($email);
        if(has_pod($e['waybill'])){
            db_query("INSERT INTO {tracking_reply} (number,message) VALUES ('%s',%d)",$e['number'],
            "Failure notification : POD for waybill #".$e['waybill']." already exists. Your POD image is not uploaded.");
        }else{
          if($e){
            
            //valid details, so add records to the tracking table
            //this should be on the tracking module!                    

            db_query("
                INSERT INTO {tracking_status} 
                (waybill,status,updated_on,remarks,medium,uid) VALUES (%d,'%s',%d,'%s','m',1)", 
                $e['waybill'],"RECEIVED",$e['date'],!empty($e['recipient']) ? "Received by : ".$e['recipient'] : "Recipient not specified"
            );
//             db_query("INSERT INTO {tracking_reply} (number,message) VALUES ('%s',%d)",$e['number'],"Confirmation : POD for waybill #".$e['waybill']." successfully uploaded.");
            $imap->saveAttachment($message_id,$email['attachments'][0]['part'],$pod_path.$e['waybill']);
          }
        }
      }
        
    }
    

  }
  
}

/**
  checks the email message for the following 
  FROM 
    number should be registered with speedex to avoid spam
    message should come from a phone by checking the FROM field only contains number
    
  SUBJECT
    has WAYBILL NUMBER and RECIPIENT separated by "-" (dash)
    WAYBILL number must exist on the database
    
    
  ATTACHMENT
    should have attachments
 
add facility to handle erroneous mails

*/



/**
  TODO: 
    restrict updating of waybill if it already has POD attached
    SMS reply to user about the status of the update
    
    validate sender
    validate waybill
    validate subject

*/
function email_fetcher_validate($email){
  
  if(!empty($email)){
    
    //sender
    //TODO : validate sender against db of registered users
//     $email['header']['sender']  =  $email['header']['sender'] == "ryanbayona@gmail.com" ? "639178012783@myglobe.com.ph" : $email['header']['sender'];
//     $email['header']['subject'] =  $email['header']['subject'] == "FW:Test" ? "3733241 - Juan Tamad" : $email['header']['subject'];

    
    list($number,$domain) = split("@",$email['header']['sender']);
    $valid_number = preg_match("/[0-9]/",trim($number));
    
    //temporarily set to true to accept any email
    $valid_number = true;
    
    
    list($waybill,$recipient) = preg_split("/\s/",$email['header']['subject'],2);
    $valid_waybill = true ; //_verify_waybill((int)$waybill);
    
   
    $date = strtotime($email['header']['date']);
    
    $has_attachment = array_key_exists('attachments',$email);
    
    if($valid_number && $valid_waybill && $has_attachment){
      return array(
        'number'  => "+".$number,
        'recipient' => trim($recipient),
        'waybill' => trim($waybill),
        'date'   => $date
      );
    
    }
    return false;
  
  }
  return false;
}
function has_pod($waybill = false){
  if($waybill){
     return file_exists("sites/default/files/pod/{$waybill}.jpg");
  }
}

